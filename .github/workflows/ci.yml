name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: Release version
        required: true
env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm-version: 21.1.0.java16
      - name: Install Native Image
        run: gu install native-image
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build
        run: ./mvnw --batch-mode ${{ env.MAVEN_OPTS }} verify
      - name: Upload code coverage
        uses: codecov/codecov-action@v2.0.1
      - name: Upload native-image configuration files
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v2
        with:
          name: native-image-configuration
          path: target/classes/META-INF/native-image
  non_windows_distributions:
    if: github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: linux
          - os: macos-10.15
            target: osx
    name: ${{ matrix.target }} distribution
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Download native-image configuration files
        uses: actions/download-artifact@v2
        with:
          name: native-image-configuration
          path: target/classes/META-INF/native-image
      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm-version: 21.1.0.java16
      - name: Install Native Image
        run: gu install native-image
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build
        run: |
          ./mvnw --batch-mode ${{ env.MAVEN_OPTS }} --activate-profiles assemble -Drevision=${{ github.event.inputs.version }} verify
      - name: Upload distribution
        uses: actions/upload-artifact@v2
        with:
          name: connect-offset-reset-${{ matrix.target }}-x86_64.zip
          path: target/connect-offset-reset-*.zip
  windows_distribution:
    if: github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: windows-2019
    name: windows distribution
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Download native-image configuration files
        uses: actions/download-artifact@v2
        with:
          name: native-image-configuration
      - name: Set up GraalVM
        uses: DeLaGuardo/setup-graalvm@3.1
        with:
          graalvm-version: 21.1.0.java16
      - name: Install Native Image
        run: gu install native-image
        shell: cmd
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build
        run: mvnw --batch-mode ${{ env.MAVEN_OPTS }} --activate-profiles assemble -Drevision=${{ github.event.inputs.version }} verify
        shell: cmd
      - name: Upload distribution
        uses: actions/upload-artifact@v2
        with:
          name: connect-offset-reset-windows-x86_64.zip
          path: target/connect-offset-reset-*.zip
  release:
    needs:
      - non_windows_distributions
      - windows_distribution
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download linux distribution
        uses: actions/download-artifact@v2
        with:
          name: connect-offset-reset-linux-x86_64.zip
          path: target
      - name: Download osx distribution
        uses: actions/download-artifact@v2
        with:
          name: connect-offset-reset-osx-x86_64.zip
          path: target
      - name: Download windows distribution
        uses: actions/download-artifact@v2
        with:
          name: connect-offset-reset-windows-x86_64.zip
          path: target
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 16
      - name: Release
        uses: jreleaser/release-action@1.3.0
        with:
          version: 0.5.0
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
